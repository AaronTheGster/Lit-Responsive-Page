body { 
	width: 100%;
	height: 100%;
	display: block;
	margin: 0;
}

.third_page{
	height: 33.3333%;
	width: 100%;
}

/* only use this method to set an image's source will be CHANGING */
.kitten {content: url("images/kitten-large.png");}


.loaf {}

.light-blue {
	background-color: #00FFFB ;
}
.black {
	background-color: #000000 ;
	display: flex ;
}
.orange {
	background-color: #FFAE00 ;
}
.purple {
	background-color: #0017FF ;
}
/*When the kitten hits its breakpoint at 660px the kitten will be sitting down */
@media only screen and (max-width: 660px) {
	.kitten {content: url("images/kitten-medium.png") ; }
	.light-blue {background-color: #000000}
	.orange {background-color: #000000}
	.purple {background-color: #000000}

}

@media only screen and (max-width: 480px) {
	.kitten {content: url("images/kitten-small.png");}
	.loaf   {content: url("images/kittyloaf.gif");}
}

@media only screen and (max-width: 345px) {
	.kitten {content: url("images/kittyloaf.gif");}

	.loaf   {content: url("images/kittyloaf.gif");}
	
}

@media only screen and (max-width: 275px) {
	.loaf {content: url{"images/kittyloaf.gif};}
	
}








/* Use this class on the PARENT of the <img> you are trying to center */
/* REMEMBER: the PARENT element tells the CHILD element(s) what to do! */
/* NOTE: Centering images in DIVs only works when the display property is "flex"! */
.center-img {
	display: flex;
	align-items: center;
	justify-content: center;
}

/* Use this class on any <img> you want to prevent from overflowing it's parent <div>! */
.contain-img {
	max-height: 99%;
	max-width: 99%;
}